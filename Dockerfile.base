ARG BASE_IMAGE=debian:bullseye
FROM ${BASE_IMAGE} AS jp-builder-base-image

ARG CMAKE_VERSION=3.22.1
ARG CMAKE_DOWNLOAD=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

ARG CONAN_VERSION=1.43.0
ARG CONAN_DOWNLOAD=https://github.com/conan-io/conan/releases/download/${CONAN_VERSION}/conan-ubuntu-64.deb

ARG UID=4200
ARG GID=${UID}

ARG ADDITIONAL_PACKAGES="git xz-utils unzip"

ENV LD_LIBRARY_PATH /usr/local/lib

WORKDIR /usr/local

RUN echo ". /etc/profile.local" >>/etc/profile; vars="LD_LIBRARY_PATH"; for i in $vars; do echo $i=\"$(eval echo \$$i)\" >>/etc/profile.local; echo export $i >>/etc/profile.local; done \
 && apt-get update \
 && DEBAIN_FRONTEND=noninteractive \
    apt-get install --no-install-recommends -y curl xz-utils libtinfo5 libxml2 make ca-certificates \
                    $(apt-cache depends cmake|grep Depends|grep -iv cmake|cut -d ':' -f 2) \
                    ${ADDITIONAL_PACKAGES} \
 && curl -Lo /tmp/conan.deb ${CONAN_DOWNLOAD} \
 && dpkg -i /tmp/conan.deb \
 && DEBIAN_FRONTEND=noninteractive apt-get install -f -y --no-install-recommends \
 && rm -rf /var/lib/apt/lists/* \
 && curl -Lo - ${CMAKE_DOWNLOAD} | tar xz --strip-components=1 \
 && groupadd --gid ${GID} build-dev \
 && adduser --gid ${GID} --uid ${UID} --gecos '' --no-create-home --home /usr/local/src --disabled-password --disabled-login build-dev \
 && mkdir -p /usr/local/src && chown -R build-dev:build-dev /usr/local/src

USER build-dev
WORKDIR /usr/local/src

CMD ["/bin/bash"]
